THREE.LWOLoader=function(){var e;function r(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager}function t(e){this.textureLoader=e}function a(e){this.textureLoader=e}function s(){}function i(){}function n(e){this.dv=new DataView(e),this.offset=0}function o(e){return e%2}function c(e){return e.length+1+(o(e.length+1)?1:0)}return r.prototype={constructor:r,crossOrigin:"anonymous",load:function(e,r,t,a){var s=this,i=void 0===s.path?THREE.LoaderUtils.extractUrlBase(e):s.path,n=e.split(i).pop().split(".")[0],o=new THREE.FileLoader(this.manager);o.setResponseType("arraybuffer"),o.load(e,function(e){console.time("Total parsing: "),r(s.parse(e,i,n)),console.timeEnd("Total parsing: ")},t,a)},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},parse:function(r,a,s){return e=(new i).parse(r),new t(new THREE.TextureLoader(this.manager).setPath(this.resourcePath||a).setCrossOrigin(this.crossOrigin)).parse(s)}},t.prototype={constructor:t,parse:function(e){return this.materials=new a(this.textureLoader).parse(),this.defaultLayerName=e,this.meshes=this.parseLayers(),{materials:this.materials,meshes:this.meshes}},parseLayers:function(){var r=[],t=[],a=new s,i=this;return e.layers.forEach(function(e){var s=a.parse(e.geometry,e),n=i.parseMesh(s,e);r[e.number]=n,-1===e.parent?t.push(n):r[e.parent].add(n)}),this.applyPivots(t),t},parseMesh:function(e,r){var t,a=this.getMaterials(e.userData.matNames,r.geometry.type);return this.duplicateUVs(e,a),t="points"===r.geometry.type?new THREE.Points(e,a):"lines"===r.geometry.type?new THREE.LineSegments(e,a):new THREE.Mesh(e,a),r.name?t.name=r.name:t.name=this.defaultLayerName+"_layer_"+r.number,t.userData.pivot=r.pivot,t},applyPivots:function(e){e.forEach(function(e){e.traverse(function(e){var r=e.userData.pivot;if(e.position.x+=r[0],e.position.y+=r[1],e.position.z+=r[2],e.parent){var t=e.parent.userData.pivot;e.position.x-=t[0],e.position.y-=t[1],e.position.z-=t[2]}})})},getMaterials:function(e,r){var t=[],a=this;e.forEach(function(e,r){t[r]=a.getMaterialByName(e)}),"points"!==r&&"lines"!==r||t.forEach(function(e,a){var s={color:e.color};"points"===r?(s.size=.1,s.map=e.map,s.morphTargets=e.morphTargets,t[a]=new THREE.PointsMaterial(s)):"lines"===r&&(t[a]=new THREE.LineBasicMaterial(s))});var s=t.filter(Boolean);return 1===s.length?s[0]:t},getMaterialByName:function(e){return this.materials.filter(function(r){return r.name===e})[0]},duplicateUVs:function(e,r){var t=!1;Array.isArray(r)?r.forEach(function(e){e.aoMap&&(t=!0)}):r.aoMap&&(t=!0),t&&e.addAttribute("uv2",new THREE.BufferAttribute(e.attributes.uv.array,2))}},a.prototype={constructor:a,parse:function(){var r=[];for(var t in this.textures={},e.materials)r.push(this.parseMaterial(e.materials[t],t,e.textures));return r},parseMaterial:function(e,r,t){var a={name:r,side:this.getSide(e.attributes),flatShading:this.getSmooth(e.attributes)},s=this.parseConnections(e.connections,e.nodes),i=this.parseTextureNodes(s.maps);this.parseAttributeImageMaps(s.attributes,t,i,e.maps);var n=this.parseAttributes(s.attributes,i);this.parseEnvMap(s,i,n),a=Object.assign(i,a),a=Object.assign(a,n);var o=s.attributes.Roughness?"Standard":"Phong";return new THREE["Mesh"+o+"Material"](a)},getSide:function(e){if(!e.side)return THREE.BackSide;switch(e.side){case 0:case 1:return THREE.BackSide;case 2:return THREE.FrontSide;case 3:return THREE.DoubleSide}},getSmooth:function(e){return!e.smooth||!e.smooth},parseConnections:function(e,r){var t={maps:{}},a=e.inputName,s=e.inputNodeName,i=e.nodeName,n=this;return a.forEach(function(e,a){if("Material"===e){var i=n.getNodeByRefName(s[a],r);t.attributes=i.attributes,t.envMap=i.fileName,t.name=s[a]}}),i.forEach(function(e,i){e===t.name&&(t.maps[a[i]]=n.getNodeByRefName(s[i],r))}),t},getNodeByRefName:function(e,r){for(var t in r)if(r[t].refName===e)return r[t]},parseTextureNodes:function(e){var r={};for(name in e){var t=e[name],a=t.fileName;if(!a)return;var s=this.loadTexture(a);switch(void 0!==t.widthWrappingMode&&(s.wrapS=this.getWrappingType(t.widthWrappingMode)),void 0!==t.heightWrappingMode&&(s.wrapT=this.getWrappingType(t.heightWrappingMode)),name){case"Color":r.map=s;break;case"Roughness":r.roughnessMap=s,r.roughness=.5;break;case"Specular":r.specularMap=s,r.specular=16777215;break;case"Luminous":r.emissiveMap=s,r.emissive=8421504;break;case"Metallic":r.metalnessMap=s,r.metalness=.5;break;case"Transparency":case"Alpha":r.alphaMap=s,r.transparent=!0;break;case"Normal":r.normalMap=s,void 0!==t.amplitude&&(r.normalScale=new THREE.Vector2(t.amplitude,t.amplitude));break;case"Bump":r.bumpMap=s}}return r.roughnessMap&&r.specularMap&&delete r.specularMap,r},parseAttributeImageMaps:function(e,r,t){for(var a in e){var s=e[a];if(s.maps){var i=s.maps[0],n=this.getTexturePathByIndex(i.imageIndex,r);if(!n)return;var o=this.loadTexture(n);switch(void 0!==i.wrap&&(o.wrapS=this.getWrappingType(i.wrap.w)),void 0!==i.wrap&&(o.wrapT=this.getWrappingType(i.wrap.h)),a){case"Color":t.map=o;break;case"Diffuse":t.aoMap=o;break;case"Roughness":t.roughnessMap=o,t.roughness=1;break;case"Specular":t.specularMap=o,t.specular=16777215;break;case"Luminosity":t.emissiveMap=o,t.emissive=8421504;break;case"Metallic":t.metalnessMap=o,t.metalness=1;break;case"Transparency":case"Alpha":t.alphaMap=o,t.transparent=!0;break;case"Normal":t.normalMap=o;break;case"Bump":t.bumpMap=o}}}},parseAttributes:function(e,r){var t={};return e.Color&&!r.map?t.color=(new THREE.Color).fromArray(e.Color.value):t.color=new THREE.Color,e.Transparency&&0!==e.Transparency.value&&(t.opacity=1-e.Transparency.value,t.transparent=!0),e["Bump Height"]&&(t.bumpScale=.1*e["Bump Height"].value),e["Refraction Index"]&&(t.refractionRatio=.98/e["Refraction Index"].value),this.parseStandardAttributes(t,e,r),this.parsePhongAttributes(t,e,r),t},parseStandardAttributes:function(e,r,t){if(r.Luminous&&0!==r.Luminous.value&&r["Luminous Color"]){var a=r["Luminous Color"].value.map(function(e){return e*r.Luminous.value});e.emissive=(new THREE.Color).fromArray(a)}r.Roughness&&!t.roughnessMap&&(e.roughness=r.Roughness.value),r.Metallic&&!t.metalnessMap&&(e.metalness=r.Metallic.value)},parsePhongAttributes:function(e,r,t){r.Diffuse&&e.color.multiplyScalar(r.Diffuse.value),r.Reflection&&(e.reflectivity=r.Reflection.value,e.combine=THREE.AddOperation),r.Luminosity&&!t.emissiveMap&&(e.emissive=(new THREE.Color).setScalar(r.Luminosity.value)),void 0!==r.Glossiness&&(e.shininess=5+Math.pow(7*r.Glossiness.value,6)),r.Roughness||!r.Specular||t.specularMap||(e.specular=(new THREE.Color).setScalar(1.5*r.Specular.value))},parseEnvMap:function(e,r,t){if(e.envMap){var a=this.loadTexture(e.envMap);t.transparent&&t.opacity<.999?(a.mapping=THREE.EquirectangularRefractionMapping,void 0!==t.reflectivity&&(delete t.reflectivity,delete t.combine),void 0!==t.metalness&&(t.metalness=1),t.opacity=1):a.mapping=THREE.EquirectangularReflectionMapping,r.envMap=a}},getTexturePathByIndex:function(r){var t="";return e.textures?(e.textures.forEach(function(e){e.index===r&&(t=e.fileName)}),t):t},loadTexture:function(e){return e?this.textureLoader.load(this.cleanPath(e)):null},cleanPath:function(e){return 0===e.indexOf("Images")||0===e.indexOf("images")?"../"+e:e.split("/").pop().split("\\").pop()},getWrappingType:function(e){switch(e){case 0:return console.warn('LWOLoader: "Reset" texture wrapping type is not supported in three.js'),THREE.ClampToEdgeWrapping;case 1:return THREE.RepeatWrapping;case 2:return THREE.MirroredRepeatWrapping;case 3:return THREE.ClampToEdgeWrapping}},getType:function(e){return e.roughness?"Standard":"Phong"}},s.prototype={constructor:s,parse:function(e,r){var t=new THREE.BufferGeometry;t.addAttribute("position",new THREE.Float32BufferAttribute(e.points,3));var a=this.splitIndices(e.vertexIndices,e.polygonDimensions);return t.setIndex(a),this.parseGroups(t,e),t.computeVertexNormals(),this.parseUVs(t,r,a),this.parseMorphTargets(t,r,a),t.translate(-r.pivot[0],-r.pivot[1],-r.pivot[2]),t},splitIndices:function(e,r){var t=[],a=0;return r.forEach(function(r){if(r<4)for(var s=0;s<r;s++)t.push(e[a+s]);else 4===r?t.push(e[a],e[a+1],e[a+2],e[a],e[a+2],e[a+3]):r>4&&console.warn("LWOLoader: polygons with greater than 4 sides are not supported");a+=r}),t},parseGroups:function(r,t){var a=e.tags,s=[],i=3;"lines"===t.type&&(i=2),"points"===t.type&&(i=1);for(var n,o=this.splitMaterialIndices(t.polygonDimensions,t.materialIndices),c=0,u={},h=0,p=0,d=0;d<o.length;d+=2){var f,g=o[d+1];0===d&&(s[c]=a[g]),void 0===n&&(n=g),g!==n&&(u[a[n]]?f=u[a[n]]:(f=c,u[a[n]]=c,s[c]=a[n],c++),r.addGroup(h,p,f),h+=p,n=g,p=0),p+=i}r.groups.length>0&&(u[a[g]]?f=u[a[g]]:(f=c,u[a[g]]=c,s[c]=a[g]),r.addGroup(h,p,f)),r.userData.matNames=s},splitMaterialIndices:function(e,r){var t=[];return e.forEach(function(e,a){e<=3?t.push(r[2*a],r[2*a+1]):4===e&&t.push(r[2*a],r[2*a+1],r[2*a],r[2*a+1])}),t},parseUVs:function(e,r){var t=Array.from(Array(2*e.attributes.position.count),function(){return 0});for(var a in r.uvs){var s=r.uvs[a].uvs;r.uvs[a].uvIndices.forEach(function(e,r){t[2*e]=s[2*r],t[2*e+1]=s[2*r+1]})}e.addAttribute("uv",new THREE.Float32BufferAttribute(t,2))},parseMorphTargets:function(e,r){var t=0;for(var a in r.morphTargets){var s=e.attributes.position.array.slice();e.morphAttributes.position||(e.morphAttributes.position=[]);var i=r.morphTargets[a].points,n=r.morphTargets[a].indices,o=r.morphTargets[a].type;n.forEach(function(e,r){"relative"===o?(s[3*e]+=i[3*r],s[3*e+1]+=i[3*r+1],s[3*e+2]+=i[3*r+2]):(s[3*e]=i[3*r],s[3*e+1]=i[3*r+1],s[3*e+2]=i[3*r+2])}),e.morphAttributes.position[t]=new THREE.Float32BufferAttribute(s,3),e.morphAttributes.position[t].name=a,t++}}},i.prototype={constructor:i,parse:function(e){for(this.reader=new n(e),this.tree={materials:{},layers:[],tags:[],textures:[]},this.currentLayer=this.tree,this.currentForm=this.tree;!this.reader.endOfFile();)this.parseBlock();return this.tree},parseBlock:function(){var e=this.reader.getIDTag(),r=this.reader.getUint32();switch(e){case"FORM":this.parseForm(r);break;case"ICON":case"VMPA":case"BBOX":case"NORM":case"PRE ":case"POST":case"KEY ":case"SPAN":case"TIME":case"CLRS":case"CLRA":case"FILT":case"DITH":case"CONT":case"BRIT":case"SATR":case"HUE ":case"GAMM":case"NEGA":case"IFLT":case"PFLT":case"PROJ":case"AXIS":case"AAST":case"PIXB":case"STCK":case"VALU":case"PNAM":case"INAM":case"GRST":case"GREN":case"GRPT":case"FKEY":case"IKEY":case"CSYS":case"OPAQ":case"CMAP":case"NLOC":case"NZOM":case"NVER":case"NSRV":case"NCRD":case"NMOD":case"NSEL":case"NPRW":case"NPLA":case"VERS":case"ENUM":case"FLAG":case"TAG ":case"CGMD":case"CGTY":case"CGST":case"CGEN":case"CGTS":case"CGTE":case"OSMP":case"OMDE":case"OUTR":this.reader.skip(r);break;case"DIFF":case"TRNL":case"REFL":case"GLOS":case"SHRP":case"RFOP":case"RSAN":case"TROP":case"RBLR":case"TBLR":case"CLRH":case"CLRF":case"ADTR":case"GLOW":case"LINE":case"ALPH":case"LINE":case"VCOL":case"ENAB":this.reader.skip(r);break;case"IPIX":case"IMIP":case"IMOD":case"AMOD":case"IINV":case"INCR":case"IAXS":case"IFOT":case"ITIM":case"IWRL":case"IUTI":case"IINX":case"IINY":case"IINZ":case"IREF":4===r?this.currentNode[e]=this.reader.getInt32():this.reader.skip(r);break;case"OTAG":this.parseObjectTag();break;case"LAYR":this.parseLayer(r);break;case"PNTS":this.parsePoints(r);break;case"VMAP":this.parseVertexMapping(r);break;case"POLS":this.parsePolygonList(r);break;case"TAGS":this.parseTagStrings(r);break;case"PTAG":this.parsePolygonTagMapping(r);break;case"VMAD":this.parseVertexMapping(r,!0);break;case"DESC":this.currentForm.description=this.reader.getString();break;case"TEXT":case"CMNT":case"NCOM":this.currentForm.comment=this.reader.getString();break;case"NAME":this.currentForm.channelName=this.reader.getString();break;case"WRAP":this.currentForm.wrap={w:this.reader.getUint16(),h:this.reader.getUint16()};break;case"IMAG":var t=this.reader.getVariableLengthIndex();this.currentForm.imageIndex=t;break;case"OREF":this.currentForm.referenceObject=this.reader.getString();break;case"ROID":this.currentForm.referenceObjectID=this.reader.getUint32();break;case"SSHN":this.currentSurface.surfaceShaderName=this.reader.getString();break;case"AOVN":this.currentSurface.surfaceCustomAOVName=this.reader.getString();break;case"NSTA":this.currentForm.disabled=this.reader.getUint16();break;case"NRNM":this.currentForm.realName=this.reader.getString();break;case"NNME":this.currentForm.refName=this.reader.getString(),this.currentSurface.nodes[this.currentForm.refName]=this.currentForm;break;case"INME":this.currentForm.nodeName||(this.currentForm.nodeName=[]),this.currentForm.nodeName.push(this.reader.getString());break;case"IINN":this.currentForm.inputNodeName||(this.currentForm.inputNodeName=[]),this.currentForm.inputNodeName.push(this.reader.getString());break;case"IINM":this.currentForm.inputName||(this.currentForm.inputName=[]),this.currentForm.inputName.push(this.reader.getString());break;case"IONM":this.currentForm.inputOutputName||(this.currentForm.inputOutputName=[]),this.currentForm.inputOutputName.push(this.reader.getString());break;case"FNAM":this.currentForm.fileName=this.reader.getString();break;case"CHAN":4===r?this.currentForm.textureChannel=this.reader.getIDTag():this.reader.skip(r);break;case"SMAN":var a=this.reader.getFloat32();this.currentSurface.attributes.smooth=!(a<0);break;case"ENAB":this.currentForm.enabled=this.reader.getUint16();break;case"COLR":this.currentSurface.attributes.color=this.reader.getFloat32Array(3),this.reader.skip(2);break;case"LUMI":this.currentSurface.attributes.luminosityLevel=this.reader.getFloat32(),this.reader.skip(2);break;case"SPEC":this.currentSurface.attributes.specularLevel=this.reader.getFloat32(),this.reader.skip(2);break;case"REFL":this.currentSurface.attributes.reflectivity=this.reader.getFloat32(),this.reader.skip(2);break;case"TRAN":this.currentSurface.attributes.opacity=this.reader.getFloat32(),this.reader.skip(2);break;case"BUMP":this.currentSurface.attributes.bumpStrength=this.reader.getFloat32(),this.reader.skip(2);break;case"SIDE":this.currentSurface.attributes.side=this.reader.getUint16();break;case"RIMG":this.currentSurface.attributes.reflectionMap=this.reader.getVariableLengthIndex();break;case"RIND":this.currentSurface.attributes.refractiveIndex=this.reader.getFloat32(),this.reader.skip(2);break;case"TIMG":this.currentSurface.attributes.refractionMap=this.reader.getVariableLengthIndex();break;case"IMAP":this.currentSurface.attributes.imageMapIndex=this.reader.getUint32();break;case"IUVI":this.currentNode.UVChannel=this.reader.getString(r);break;case"IUTL":this.currentNode.widthWrappingMode=this.reader.getUint32();break;case"IVTL":this.currentNode.heightWrappingMode=this.reader.getUint32();break;default:this.parseUnknownCHUNK(e,r)}this.reader.offset>=this.currentFormEnd&&(this.currentForm=this.parentForm)},parseForm:function(e){var r=this.reader.getIDTag();switch(r){case"ISEQ":case"ANIM":case"STCC":case"VPVL":case"VPRM":case"NROT":case"WRPW":case"WRPH":case"FUNC":case"FALL":case"OPAC":case"GRAD":case"ENVS":case"VMOP":case"VMBG":case"OMAX":case"STEX":case"CKBG":case"CKEY":case"VMLA":case"VMLB":this.skipForm(e);break;case"META":case"NNDS":case"NODS":case"NDTA":case"ADAT":case"AOVS":case"BLOK":case"IBGC":case"IOPC":case"IIMG":case"TXTR":break;case"IFAL":case"ISCL":case"IPOS":case"IROT":case"IBMP":case"IUTD":case"IVTD":this.parseTextureNodeAttribute(r);break;case"LWO3":this.tree.format=r;break;case"ENVL":this.parseEnvelope(e);break;case"CLIP":this.parseClip(e);break;case"STIL":this.parseImage();break;case"XREF":this.reader.skip(8),this.currentForm.referenceTexture={index:this.reader.getUint32(),refName:this.reader.getString()};break;case"IMST":this.parseImageStateForm(e);break;case"SURF":this.parseSurfaceForm(e);break;case"VALU":this.parseValueForm(e);break;case"NTAG":this.parseSubNode(e);break;case"NNDS":this.setupForm("nodes",e);break;case"ATTR":case"SATR":this.setupForm("attributes",e);break;case"NCON":this.parseConnections(e);break;case"SSHA":this.parentForm=this.currentForm,this.currentForm=this.currentSurface,this.setupForm("surfaceShader",e);break;case"SSHD":this.setupForm("surfaceShaderData",e);break;case"ENTR":this.parseEntryForm(e);break;case"IMAP":this.parseImageMap(e);break;case"TAMP":this.parseXVAL("amplitude",e);break;case"TMAP":this.setupForm("textureMap",e);break;case"CNTR":this.parseXVAL3("center",e);break;case"SIZE":this.parseXVAL3("scale",e);break;case"ROTA":this.parseXVAL3("rotation",e);break;default:this.parseUnknownForm(r,e)}},setupForm:function(e,r){this.currentForm||(this.currentForm=this.currentNode),this.currentFormEnd=this.reader.offset+r,this.parentForm=this.currentForm,this.currentForm[e]?(console.warn("LWOLoader: form already exists on parent: ",e,this.currentForm),this.currentForm=this.currentForm[e]):(this.currentForm[e]={},this.currentForm=this.currentForm[e])},skipForm:function(e){this.reader.skip(e-4)},parseUnknownForm:function(e,r){console.warn("LWOLoader: unknown FORM encountered: "+e,r),this.reader.dv.buffer,this.reader.offset,this.reader.skip(r-4)},parseSurfaceForm:function(e){this.reader.skip(8);var r=this.reader.getString(),t={attributes:{},connections:{},name:r,nodes:{},source:this.reader.getString()};this.tree.materials[r]=t,this.currentSurface=t,this.parentForm=this.tree.materials,this.currentForm=t,this.currentFormEnd=this.reader.offset+e},parseSubNode:function(e){this.reader.skip(8);var r={name:this.reader.getString()};this.currentForm=r,this.currentNode=r,this.currentFormEnd=this.reader.offset+e},parseConnections:function(e){this.currentFormEnd=this.reader.offset+e,this.parentForm=this.currentForm,this.currentForm=this.currentSurface.connections},parseEntryForm:function(e){this.reader.skip(8);var r=this.reader.getString();this.currentForm=this.currentNode.attributes,this.setupForm(r,e)},parseValueForm:function(){this.reader.skip(8);var e=this.reader.getString();"double"===e?this.currentForm.value=this.reader.getUint64():"int"===e?this.currentForm.value=this.reader.getUint32():"vparam"===e?(this.reader.skip(24),this.currentForm.value=this.reader.getFloat64()):"vparam3"===e&&(this.reader.skip(24),this.currentForm.value=this.reader.getFloat64Array(3))},parseImageStateForm:function(){this.reader.skip(8),this.currentForm.mipMapLevel=this.reader.getFloat32()},parseImageMap:function(e){this.currentFormEnd=this.reader.offset+e,this.parentForm=this.currentForm,this.currentForm.maps||(this.currentForm.maps=[]);var r={};this.currentForm.maps.push(r),this.currentForm=r,this.reader.skip(10)},parseTextureNodeAttribute:function(e){switch(this.reader.skip(28),this.reader.skip(20),e){case"ISCL":this.currentNode.scale=this.reader.getFloat32Array(3);break;case"IPOS":this.currentNode.position=this.reader.getFloat32Array(3);break;case"IROT":this.currentNode.rotation=this.reader.getFloat32Array(3);break;case"IFAL":this.currentNode.falloff=this.reader.getFloat32Array(3);break;case"IBMP":this.currentNode.amplitude=this.reader.getFloat32();break;case"IUTD":this.currentNode.uTiles=this.reader.getFloat32();break;case"IVTD":this.currentNode.vTiles=this.reader.getFloat32()}this.reader.skip(2)},parseEnvelope:function(e){this.reader.skip(e-4)},parseClip:function(e){if("FORM"===this.reader.getIDTag())return this.reader.skip(16),void(this.currentNode.fileName=this.reader.getString());this.reader.setOffset(this.reader.offset-4),this.currentFormEnd=this.reader.offset+e,this.parentForm=this.currentForm,this.reader.skip(8);var r={index:this.reader.getUint32()};this.tree.textures.push(r),this.currentForm=r},parseImage:function(){this.reader.skip(8),this.currentForm.fileName=this.reader.getString()},parseXVAL:function(e,r){var t=this.reader.offset+r-4;this.reader.skip(8),this.currentForm[e]=this.reader.getFloat32(),this.reader.setOffset(t)},parseXVAL3:function(e,r){var t=this.reader.offset+r-4;this.reader.skip(8),this.currentForm[e]={x:this.reader.getFloat32(),y:this.reader.getFloat32(),z:this.reader.getFloat32()},this.reader.setOffset(t)},parseObjectTag:function(){this.tree.objectTags||(this.tree.objectTags={}),this.tree.objectTags[this.reader.getIDTag()]={tagString:this.reader.getString()}},parseLayer:function(e){var r={number:this.reader.getUint16(),flags:this.reader.getUint16(),pivot:this.reader.getFloat32Array(3),name:this.reader.getString()};this.tree.layers.push(r),this.currentLayer=r;var t=16+c(this.currentLayer.name);this.currentLayer.parent=t<e?this.reader.getUint16():-1},parsePoints:function(e){this.currentPoints=[];for(var r=0;r<e/4;r+=3)this.currentPoints.push(this.reader.getFloat32(),this.reader.getFloat32(),-this.reader.getFloat32())},parseVertexMapping:function(e,r){var t=this.reader.offset+e,a=this.reader.getString();if(this.reader.offset!==t){this.reader.setOffset(this.reader.offset-c(a));var s=this.reader.getIDTag();this.reader.getUint16();var i=this.reader.getString(),n=e-6-c(i);switch(s){case"TXUV":this.parseUVMapping(i,t,r);break;case"MORF":case"SPOT":this.parseMorphTargets(i,t,s);break;case"APSL":case"NORM":case"WGHT":case"MNVW":case"PICK":case"RGB ":case"RGBA":this.reader.skip(n);break;default:console.warn("LWOLoader: unknown vertex map type: "+s),this.reader.skip(n)}}else this.currentForm.UVChannel=a},parseUVMapping:function(e,r,t){for(var a=[],s=[],i=[];this.reader.offset<r;)a.push(this.reader.getVariableLengthIndex()),t&&s.push(this.reader.getVariableLengthIndex()),i.push(this.reader.getFloat32(),this.reader.getFloat32());t?(this.currentLayer.discontinuousUVs||(this.currentLayer.discontinuousUVs={}),this.currentLayer.discontinuousUVs[e]={uvIndices:a,polyIndices:s,uvs:i}):(this.currentLayer.uvs||(this.currentLayer.uvs={}),this.currentLayer.uvs[e]={uvIndices:a,uvs:i})},parseMorphTargets:function(e,r,t){var a=[],s=[];for(t="MORF"===t?"relative":"absolute";this.reader.offset<r;)a.push(this.reader.getVariableLengthIndex()),s.push(this.reader.getFloat32(),this.reader.getFloat32(),-this.reader.getFloat32());this.currentLayer.morphTargets||(this.currentLayer.morphTargets={}),this.currentLayer.morphTargets[e]={indices:a,points:s,type:t}},parsePolygonList:function(e){for(var r=this.reader.offset+e,t=this.reader.getIDTag(),a=[],s=[];this.reader.offset<r;){var i=this.reader.getUint16();i&=1023,s.push(i);for(var n=0;n<i;n++)a.push(this.reader.getVariableLengthIndex())}var o={type:t,vertexIndices:a,polygonDimensions:s,points:this.currentPoints};1===s[0]?o.type="points":2===s[0]&&(o.type="lines"),this.currentLayer.geometry=o},parseTagStrings:function(e){this.tree.tags=this.reader.getStringArray(e)},parsePolygonTagMapping:function(e){var r=this.reader.offset+e;"SURF"===this.reader.getIDTag()?this.parseMaterialIndices(r):this.reader.skip(e-4)},parseMaterialIndices:function(e){var r;for(this.currentLayer.geometry.materialIndices=[];this.reader.offset<e;){var t=this.reader.getVariableLengthIndex(),a=this.reader.getUint16();r||(r=a),this.currentLayer.geometry.materialIndices.push(t,a)}},parseUnknownCHUNK:function(e,r){console.warn("LWOLoader: unknown chunk type: "+e+" length: "+r);var t=this.reader.getString(r);this.currentForm[e]=t}},n.prototype={constructor:n,size:function(){return this.dv.buffer.byteLength},setOffset:function(e){e>0&&e<this.dv.buffer.byteLength?this.offset=e:console.error("LWOLoader: invalid buffer offset")},endOfFile:function(){return this.offset>=this.size()},skip:function(e){this.offset+=e},getUint8:function(){var e=this.dv.getUint8(this.offset);return this.offset+=1,e},getUint16:function(){var e=this.dv.getUint16(this.offset);return this.offset+=2,e},getInt32:function(){var e=this.dv.getInt32(this.offset,!1);return this.offset+=4,e},getUint32:function(){var e=this.dv.getUint32(this.offset,!1);return this.offset+=4,e},getUint64:function(){return 4294967296*this.getUint32()+this.getUint32()},getFloat32:function(){var e=this.dv.getFloat32(this.offset,!1);return this.offset+=4,e},getFloat32Array:function(e){for(var r=[],t=0;t<e;t++)r.push(this.getFloat32());return r},getFloat64:function(){var e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e},getFloat64Array:function(e){for(var r=[],t=0;t<e;t++)r.push(this.getFloat64());return r},getVariableLengthIndex:function(){var e=this.getUint8();return 255===e?65536*this.getUint8()+256*this.getUint8()+this.getUint8():256*e+this.getUint8()},getIDTag:function(){return this.getString(4)},getString:function(e){if(0!==e){var r=[];if(e)for(var t=0;t<e;t++)r[t]=this.getUint8();else{for(var a,s=0;0!==a;)0!==(a=this.getUint8())&&r.push(a),s++;o(s+1)||this.getUint8()}return THREE.LoaderUtils.decodeText(new Uint8Array(r))}},getStringArray:function(e){var r=this.getString(e);return(r=r.split("\0")).filter(Boolean)}},r}();